Устанавливаем:
yum install nano xfsdump

Имеем:
[root@lvm ~]# lsblk
NAME                    MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
sda                       8:0    0   40G  0 disk 
├─sda1                    8:1    0    1M  0 part 
├─sda2                    8:2    0    1G  0 part /boot
└─sda3                    8:3    0   39G  0 part 
  ├─VolGroup00-LogVol00 253:0    0 37.5G  0 lvm  /
  └─VolGroup00-LogVol01 253:1    0  1.5G  0 lvm  [SWAP]
sdb                       8:16   0   10G  0 disk 
sdc                       8:32   0    2G  0 disk 
sdd                       8:48   0    1G  0 disk 
sde                       8:64   0    1G  0 disk 


#
# /etc/fstab
# Created by anaconda on Sat May 12 18:50:26 2018
#
# Accessible filesystems, by reference, are maintained under '/dev/disk'
# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info
#
/dev/mapper/VolGroup00-LogVol00 /                       xfs     defaults        0 0
UUID=570897ca-e759-4c81-90cf-389da6eee4cc /boot                   xfs     defaults        0 0
/dev/mapper/VolGroup00-LogVol01 swap                    swap    defaults        0 0


Начинаем работу.

1. Подготовим временный том для / раздела:

а) pvcreate /dev/sdb
б) vgcreate vg_root /dev/sdb
в) lvcreate -n lv_root -l +100%FREE /dev/vg_root

Создадим на нем файловую систему и смонтируем его, чтобы перенести туда данные:

а) mkfs.xfs /dev/vg_root/lv_root
б) mount /dev/vg_root/lv_root /mnt

Этой командой скопируем все данные с / раздела в /mnt:

xfsdump -J - /dev/VolGroup00/LogVol00 | xfsrestore -J - /mnt

Затем переконфигурируем grub для того, чтобý при старте перейти в новый /

а) for i in /proc/ /sys/ /dev/ /run/ /boot/; do mount --bind $i /mnt/$i; done
б) chroot /mnt/
в) grub2-mkconfig -o /boot/grub2/grub.cfg

Обновим образ initrd:

cd /boot ; for i in `ls initramfs-*img`; do dracut -v $i `echo $i|sed "s/initramfs-//g; s/.img//g"` --force; done

Чтобы при загрузке был смонтирован нужный root нужно в файле /boot/grub2/grub.cfg заменить rd.lvm.lv=VolGroup00/LogVol00 на rd.lvm.lv=vg_root/lv_root

Также меняем в файле /etc/fstab монтирование корня и приводим его к виду:

#
# /etc/fstab
# Created by anaconda on Sat May 12 18:50:26 2018
#
# Accessible filesystems, by reference, are maintained under '/dev/disk'
# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info
#
#/dev/mapper/VolGroup00-LogVol00 /                       xfs     defaults        0 0
/dev/mapper/vg_root-lv_root /                       xfs     defaults        0 0
UUID=570897ca-e759-4c81-90cf-389da6eee4cc /boot                   xfs     defaults        0 0
/dev/mapper/VolGroup00-LogVol01 swap                    swap    defaults        0 0

Выходим из chroot командой exit. Далее reboot.

Перезагружаемся успешно с новым рут томом. Убедиться в этом можно посмотрев вывод

[root@lvm ~]# lsblk
NAME                    MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
sda                       8:0    0   40G  0 disk
├─sda1                    8:1    0    1M  0 part
├─sda2                    8:2    0    1G  0 part /boot
└─sda3                    8:3    0   39G  0 part
  ├─VolGroup00-LogVol01 253:1    0  1.5G  0 lvm  [SWAP]
  └─VolGroup00-LogVol00 253:2    0 37.5G  0 lvm
sdb                       8:16   0   10G  0 disk
└─vg_root-lv_root       253:0    0   10G  0 lvm  /
sdc                       8:32   0    2G  0 disk
sdd                       8:48   0    1G  0 disk
sde                       8:64   0    1G  0 disk


Теперь нам нужно изменить размер старой VG и вернуть на него рут. Для этого удаляем старый LV размеров в 40G и создаем новый на 8G:

а) lvremove /dev/VolGroup00/LogVol00
б) lvcreate -n VolGroup00/LogVol00 -L 8G /dev/VolGroup00

Проделываем на нем те же операции, что и в первый раз:

а) mkfs.xfs /dev/VolGroup00/LogVol00
б) mount /dev/VolGroup00/LogVol00 /mnt
в) xfsdump -J - /dev/vg_root/lv_root | xfsrestore -J - /mnt

Так же как в первый раз переконфигурируем grub, за исключением правки /etc/grub2/grub.cfg:

а) for i in /proc/ /sys/ /dev/ /run/ /boot/; do mount --bind $i /mnt/$i; done
б) chroot /mnt/
в) grub2-mkconfig -o /boot/grub2/grub.cfg
г) cd /boot ; for i in `ls initramfs-*img`; do dracut -v $i `echo $i|sed "s/initramfs-//g; s/.img//g"` --force; done

Пока не перезагружаемся и не выходим из под chroot - мы можем заодно перенести /var

На свободных дисках создаем зеркало:

а) pvcreate /dev/sdc /dev/sdd
б) vgcreate vg_var /dev/sdc /dev/sdd
в) lvcreate -L 950M -m1 -n lv_var vg_var

Создаем на нем ФС и перемещаем туда /var:

а) mkfs.ext4 /dev/vg_var/lv_var
б) mount /dev/vg_var/lv_var /mnt
в) cp -aR /var/* /mnt/ (или rsync -avHPSAX /var/ /mnt/)

На всякий случай сохраняем содержимое старого var (или же можно его просто удалить):
mkdir /tmp/oldvar && mv /var/* /tmp/oldvar

Монтируем новый var в каталог /var:
а) umount /mnt
б) mount /dev/vg_var/lv_var /var

Правим fstab для автоматического монтирования /var:
echo "`blkid | grep var: | awk '{print $2}'` /var ext4 defaults 0 0" >> /etc/fstab

Также меняем в файле /etc/fstab монтирование корня и приводим его к виду:

#
# /etc/fstab
# Created by anaconda on Sat May 12 18:50:26 2018
#
# Accessible filesystems, by reference, are maintained under '/dev/disk'
# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info
#
/dev/mapper/VolGroup00-LogVol00 /                       xfs     defaults        0 0
#/dev/mapper/vg_root-lv_root /                       xfs     defaults        0 0
UUID=570897ca-e759-4c81-90cf-389da6eee4cc /boot                   xfs     defaults        0 0
/dev/mapper/VolGroup00-LogVol01 swap                    swap    defaults        0 0


После чего можно успешно перезагружаться в новый (уменьшенный root) и удалять временную Volume Group:
а) lvremove /dev/vg_root/lv_root
б) vgremove /dev/vg_root
в) pvremove /dev/sdb

Выделяем том под /home по тому же принципу что делали для /var:
а) lvcreate -n LogVol_Home -L 2G /dev/VolGroup00
б) mkfs.xfs /dev/VolGroup00/LogVol_Home
в) mount /dev/VolGroup00/LogVol_Home /mnt/
г) cp -aR /home/* /mnt/ 
д) rm -rf /home/*
е) umount /mnt
ж) mount /dev/VolGroup00/LogVol_Home /home/

Правим fstab длā автоматического монтирования /home:
echo "`blkid | grep Home | awk '{print $2}'` /home xfs defaults 0 0" >> /etc/fstab

Далее работаем со снапшотами:

Сгенерируем файлы в /home/:

touch /home/file{1..20}

Снять снапшот:

lvcreate -L 100MB -s -n home_snap /dev/VolGroup00/LogVol_Home

Удалить часть файлов:

rm -f /home/file{11..20}

Процесс восстановления со снапшота:

а) umount /home
б) lvconvert --merge /dev/VolGroup00/home_snap 
в) mount /home

В результате имеем:

#
# /etc/fstab
# Created by anaconda on Sat May 12 18:50:26 2018
#
# Accessible filesystems, by reference, are maintained under '/dev/disk'
# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info
#
/dev/mapper/VolGroup00-LogVol00 /                       xfs     defaults        0 0
#/dev/mapper/vg_root-lv_root /                       xfs     defaults        0 0
UUID=570897ca-e759-4c81-90cf-389da6eee4cc /boot                   xfs     defaults        0 0
/dev/mapper/VolGroup00-LogVol01 swap                    swap    defaults        0 0
UUID="b4d7f6cd-2a83-4c4c-973e-49cbb8bcfe4e" /var ext4 defaults 0 0
UUID="a8a537c8-a800-4501-8e60-093280b96233" /home xfs defaults 0 0

[root@lvm ~]# lsblk
NAME                       MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
sda                          8:0    0   40G  0 disk
├─sda1                       8:1    0    1M  0 part
├─sda2                       8:2    0    1G  0 part /boot
└─sda3                       8:3    0   39G  0 part
  ├─VolGroup00-LogVol00    253:0    0    8G  0 lvm  /
  ├─VolGroup00-LogVol01    253:1    0  1.5G  0 lvm  [SWAP]
  └─VolGroup00-LogVol_Home 253:7    0    2G  0 lvm  /home
sdb                          8:16   0   10G  0 disk
sdc                          8:32   0    2G  0 disk
├─vg_var-lv_var_rmeta_0    253:2    0    4M  0 lvm
│ └─vg_var-lv_var          253:6    0  952M  0 lvm  /var
└─vg_var-lv_var_rimage_0   253:3    0  952M  0 lvm
  └─vg_var-lv_var          253:6    0  952M  0 lvm  /var
sdd                          8:48   0    1G  0 disk
├─vg_var-lv_var_rmeta_1    253:4    0    4M  0 lvm
│ └─vg_var-lv_var          253:6    0  952M  0 lvm  /var
└─vg_var-lv_var_rimage_1   253:5    0  952M  0 lvm
  └─vg_var-lv_var          253:6    0  952M  0 lvm  /var
sde                          8:64   0    1G  0 disk








[root@lvm ~]# lvremove /dev/VolGroup00/LogVol00
Do you really want to remove active logical volume VolGroup00/LogVol00? [y/n]: y
  Logical volume "LogVol00" successfully removed

  
#
# /etc/fstab
# Created by anaconda on Sat May 12 18:50:26 2018
#
# Accessible filesystems, by reference, are maintained under '/dev/disk'
# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info
#
/dev/mapper/VolGroup00-LogVol00 /                       xfs     defaults        0 0
#/dev/mapper/vg_root-lv_root /                       xfs     defaults        0 0
UUID=570897ca-e759-4c81-90cf-389da6eee4cc /boot                   xfs     defaults        0 0
/dev/mapper/VolGroup00-LogVol01 swap                    swap    defaults        0 0
UUID="b4d7f6cd-2a83-4c4c-973e-49cbb8bcfe4e" /var ext4 defaults 0 0

#
# /etc/fstab
# Created by anaconda on Sat May 12 18:50:26 2018
#
# Accessible filesystems, by reference, are maintained under '/dev/disk'
# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info
#
/dev/mapper/VolGroup00-LogVol00 /                       xfs     defaults        0 0
#/dev/mapper/vg_root-lv_root /                       xfs     defaults        0 0
UUID=570897ca-e759-4c81-90cf-389da6eee4cc /boot                   xfs     defaults        0 0
/dev/mapper/VolGroup00-LogVol01 swap                    swap    defaults        0 0
UUID="b4d7f6cd-2a83-4c4c-973e-49cbb8bcfe4e" /var ext4 defaults 0 0
UUID="a8a537c8-a800-4501-8e60-093280b96233" /home xfs defaults 0 0
